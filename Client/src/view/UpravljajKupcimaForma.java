/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import tableModel.TableModelKupac;
import controller.Controller;
import javax.swing.JOptionPane;
import domain.Kupac;
import domain.Mesto;
import domain.TipKupca;
import java.sql.SQLIntegrityConstraintViolationException;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.TableColumn;

/**
 *
 * @author Saki
 */
public class UpravljajKupcimaForma extends javax.swing.JFrame {

    public JTable getTblKupci() {
        return tblKupci;
    }

    public void setTblKupci(JTable tblKupci) {
        this.tblKupci = tblKupci;
    }

    private ArrayList<Kupac> lista;

    /**
     * Creates new form PromeniKupacForma
     */
    public UpravljajKupcimaForma(boolean obrisiKupca) throws Exception {
        initComponents();
        lista = Controller.getInstance().ucitajKupceIzBaze();
        setTitle("Upravljaj kupcima");
        radioPravno.addActionListener(e -> popuniCombo());
        radioFizicko.addActionListener(e -> popuniCombo());
        popuniCombo();
        setResizable(false);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        // radioPravno.setSelected(true);
        if (obrisiKupca == true) {
            btnDelete.setVisible(true);
            btnChange.setVisible(false);
        }
        try {
            tblKupci.setModel(new TableModelKupac());
            TableColumn mestoColumn = tblKupci.getColumnModel().getColumn(5);
            mestoColumn.setPreferredWidth(200);
            mestoColumn.setMinWidth(150);
            mestoColumn.setMaxWidth(230);
            TableColumn idColumn = tblKupci.getColumnModel().getColumn(0);
            idColumn.setPreferredWidth(30);
            idColumn.setMinWidth(20);
            idColumn.setMaxWidth(40);
        } catch (Exception ex) {
            Logger.getLogger(UpravljajKupcimaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblKupci = new javax.swing.JTable();
        btnChange = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        txtKupac = new javax.swing.JLabel();
        txtMesto = new javax.swing.JLabel();
        comboMesto = new javax.swing.JComboBox<>();
        comboKupac = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        radioPravno = new javax.swing.JRadioButton();
        radioFizicko = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblKupci.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblKupci.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblKupci);

        btnChange.setBackground(new java.awt.Color(153, 255, 204));
        btnChange.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnChange.setText("Promeni");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(153, 255, 204));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnDelete.setText("Obriši");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(153, 255, 204));
        btnCancel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCancel.setText("Otkaži");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        txtKupac.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtKupac.setText("Kupac");

        txtMesto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMesto.setText("Mesto");

        comboMesto.setBackground(new java.awt.Color(153, 255, 204));
        comboMesto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        comboKupac.setBackground(new java.awt.Color(153, 255, 204));
        comboKupac.setEditable(true);
        comboKupac.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboKupac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboKupacActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(153, 255, 204));
        btnSearch.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSearch.setText("Pretraži");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        radioPravno.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        radioPravno.setText("Pravno lice");
        radioPravno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioPravnoActionPerformed(evt);
            }
        });

        radioFizicko.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        radioFizicko.setText("Fizičko lice");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 49, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioPravno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioFizicko, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(135, 135, 135)
                                .addComponent(txtKupac)
                                .addGap(244, 244, 244)
                                .addComponent(txtMesto, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(comboKupac, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(comboMesto, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(42, 42, 42)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnChange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtKupac)
                            .addComponent(txtMesto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboMesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboKupac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(radioPravno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioFizicko)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnChange, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)))
                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        try {
            int selektovanRed = tblKupci.getSelectedRow();
            if (selektovanRed == -1) {
                JOptionPane.showMessageDialog(this, "Ništa nije označeno!", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }
            try {
                //throw new RuntimeException("Simulacija greške");
                Controller.getInstance().obrisiKupca(lista.get(selektovanRed));
            } catch (SQLIntegrityConstraintViolationException ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne može da obriše kupca.", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }
            JOptionPane.showMessageDialog(this, "Sistem je uspešno obrisao kupca.", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);

            tblKupci.setModel(new TableModelKupac());
        } catch (Exception ex) {
            Logger.getLogger(UpravljajCvecarimaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
        try {
            // TODO add your handling code here:

            int selektovanRed = tblKupci.getSelectedRow();
            if (selektovanRed == -1) {
                JOptionPane.showMessageDialog(this, "Ništa nije označeno!", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }
            TableModelKupac model = (TableModelKupac) tblKupci.getModel();
            Kupac kupacChange = model.getKupac(selektovanRed);

            try {
                //throw new RuntimeException("Simulacija greške");
                JOptionPane.showMessageDialog(this, "Sistem je našao kupca.", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);
                KreirajKupcaForma kf = new KreirajKupcaForma(this, kupacChange);
                kf.setVisible(true);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Sistem nije uspeo da nađe kupca.", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(UpravljajKupcimaForma.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_btnChangeActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        try {
            // TODO add your handling code here:
            Mesto mesto = (Mesto) comboMesto.getSelectedItem();
            Kupac kupac = (Kupac) comboKupac.getSelectedItem();
            Kupac filter = new Kupac();
            if (mesto.getGrad().equals("Bilo koji")) {
                mesto = null;
            }
            if (kupac.getNaziv().equals("Bilo koji")) {
                kupac = null;
            }
            filter.setMesto(mesto);
            if (kupac != null) {
                filter.setNaziv(kupac.getNaziv());
            }
            ArrayList<Kupac> filtriraniKupci = Controller.getInstance().pretraziKupce(filter);
            TableModelKupac model = new TableModelKupac(filtriraniKupci);
            if (model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "Sistem nije uspeo da nađe kupce po zadatim kriterijumima.", "Greška", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                JOptionPane.showMessageDialog(this, "Sistem je našao kupce po zadatim kriterijumima.", "Obaveštenje", JOptionPane.INFORMATION_MESSAGE);
                tblKupci.setModel(model);
                TableColumn mestoColumn = tblKupci.getColumnModel().getColumn(5);
                mestoColumn.setPreferredWidth(200);
                mestoColumn.setMinWidth(150);
                mestoColumn.setMaxWidth(230);
                TableColumn idColumn = tblKupci.getColumnModel().getColumn(0);
                idColumn.setPreferredWidth(30);
                idColumn.setMinWidth(20);
                idColumn.setMaxWidth(40);
            }

        } catch (Exception ex) {
            Logger.getLogger(UpravljajKupcimaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void comboKupacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboKupacActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboKupacActionPerformed

    private void radioPravnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioPravnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioPravnoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<Kupac> comboKupac;
    private javax.swing.JComboBox<Mesto> comboMesto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton radioFizicko;
    private javax.swing.JRadioButton radioPravno;
    private javax.swing.JTable tblKupci;
    private javax.swing.JLabel txtKupac;
    private javax.swing.JLabel txtMesto;
    // End of variables declaration//GEN-END:variables

    private void popuniCombo() {
        ButtonGroup group = new ButtonGroup();
        group.add(radioPravno);
        group.add(radioFizicko);
        try {
            comboKupac.removeAllItems();
            Kupac defaultKupac = new Kupac();
            defaultKupac.setNaziv("Bilo koji");
            comboKupac.addItem(defaultKupac);
            ArrayList<Kupac> kupci = Controller.getInstance().ucitajKupceIzBaze();
            for (Kupac k : kupci) {
                if (radioPravno.isSelected() && k.getTip() == TipKupca.PRAVNO_LICE) {
                    comboKupac.addItem(k);
                } else if (radioFizicko.isSelected() && k.getTip() == TipKupca.FIZICKO_LICE) {
                    comboKupac.addItem(k);
                } else if (!radioPravno.isSelected() && !radioFizicko.isSelected()) {
                    comboKupac.addItem(k);
                }
            }

            comboMesto.removeAllItems();
            Mesto defaultMesto = new Mesto();
            defaultMesto.setGrad("Bilo koje");
            comboMesto.addItem(defaultMesto);
            List<Mesto> mesto = Controller.getInstance().ucitajMestaIzBaze();
            mesto.sort(Comparator.comparing(Mesto::getGrad, String.CASE_INSENSITIVE_ORDER));
            for (Mesto m : mesto) {
                comboMesto.addItem(m);
            }
        } catch (Exception ex) {
            Logger.getLogger(UpravljajKupcimaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
